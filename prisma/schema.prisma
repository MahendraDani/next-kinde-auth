// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType{
  INDIVIDUAL
  ORGANIZATION
}

model User{
  id String @id
  first_name String
  last_name String
  email String
  profile_image String?
  role UserType
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  balance Int? @default(0)
  attendees Attendees[]
}
model Organization{
  org_id String @id
  name String
  description String
  founder_name String
  email String
  phone String
  address String
  city String
  state String
  country String
  events Event[]
}

model Event{
  event_id String @id @default(cuid())
  event_name String
  event_description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  start_date DateTime? @db.Timestamp()
  end_date  DateTime? @db.Timestamp()
  address String
  city String
  state String
  country String
  pincode Int
  is_completed Boolean @default(false)
  registrants_count Int @default(0)
  attendees_count Int @default(0)
  organizer_id String 
  organizer Organization @relation(fields: [organizer_id],references: [org_id],onDelete: Cascade)
  images Event_Images[]
  attendees Attendees[]
}

model Event_Images{
  event_img_id String @id @default(cuid())
  event_id String
  event_image_url String?
  alt_text String?
  event Event @relation(fields: [event_id],references: [event_id],onDelete:Cascade )
}

model Attendees{
  id String @id @unique
  event_id String
  user_id String
  is_present Boolean @default(false)
  registered_at DateTime @db.Timestamp() @default(now())
  event Event @relation(fields: [event_id],references: [event_id],onDelete: Cascade)
  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)
}